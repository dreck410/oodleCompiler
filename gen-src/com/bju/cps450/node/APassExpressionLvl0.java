/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.bju.cps450.node;

import com.bju.cps450.analysis.*;

@SuppressWarnings("nls")
public final class APassExpressionLvl0 extends PExpressionLvl0
{
    private PExpressionLast _expressionLast_;

    public APassExpressionLvl0()
    {
        // Constructor
    }

    public APassExpressionLvl0(
        @SuppressWarnings("hiding") PExpressionLast _expressionLast_)
    {
        // Constructor
        setExpressionLast(_expressionLast_);

    }

    @Override
    public Object clone()
    {
        return new APassExpressionLvl0(
            cloneNode(this._expressionLast_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPassExpressionLvl0(this);
    }

    public PExpressionLast getExpressionLast()
    {
        return this._expressionLast_;
    }

    public void setExpressionLast(PExpressionLast node)
    {
        if(this._expressionLast_ != null)
        {
            this._expressionLast_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressionLast_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expressionLast_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expressionLast_ == child)
        {
            this._expressionLast_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expressionLast_ == oldChild)
        {
            setExpressionLast((PExpressionLast) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
