/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.bju.cps450.node;

import com.bju.cps450.analysis.*;

@SuppressWarnings("nls")
public final class AAssignmentStatement extends PStatement
{
    private PAssignee _assignee_;
    private PExpression _value_;

    public AAssignmentStatement()
    {
        // Constructor
    }

    public AAssignmentStatement(
        @SuppressWarnings("hiding") PAssignee _assignee_,
        @SuppressWarnings("hiding") PExpression _value_)
    {
        // Constructor
        setAssignee(_assignee_);

        setValue(_value_);

    }

    @Override
    public Object clone()
    {
        return new AAssignmentStatement(
            cloneNode(this._assignee_),
            cloneNode(this._value_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAssignmentStatement(this);
    }

    public PAssignee getAssignee()
    {
        return this._assignee_;
    }

    public void setAssignee(PAssignee node)
    {
        if(this._assignee_ != null)
        {
            this._assignee_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._assignee_ = node;
    }

    public PExpression getValue()
    {
        return this._value_;
    }

    public void setValue(PExpression node)
    {
        if(this._value_ != null)
        {
            this._value_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._value_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._assignee_)
            + toString(this._value_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._assignee_ == child)
        {
            this._assignee_ = null;
            return;
        }

        if(this._value_ == child)
        {
            this._value_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._assignee_ == oldChild)
        {
            setAssignee((PAssignee) newChild);
            return;
        }

        if(this._value_ == oldChild)
        {
            setValue((PExpression) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
