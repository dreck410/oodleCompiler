/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.bju.cps450.analysis;

import com.bju.cps450.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTNewLine(TNewLine node);
    void caseTIgnore(TIgnore node);
    void caseTString(TString node);
    void caseTThen(TThen node);
    void caseTTrue(TTrue node);
    void caseTFalse(TFalse node);
    void caseTFrom(TFrom node);
    void caseTClass(TClass node);
    void caseTWhile(TWhile node);
    void caseTNull(TNull node);
    void caseTNew(TNew node);
    void caseTMe(TMe node);
    void caseTLoop(TLoop node);
    void caseTIs(TIs node);
    void caseTInt(TInt node);
    void caseTInherits(TInherits node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTEnd(TEnd node);
    void caseTBoolean(TBoolean node);
    void caseTBegin(TBegin node);
    void caseTLogicalAnd(TLogicalAnd node);
    void caseTLogicalOr(TLogicalOr node);
    void caseTLogicalNot(TLogicalNot node);
    void caseTStringLit(TStringLit node);
    void caseTInteger(TInteger node);
    void caseTStringConcat(TStringConcat node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTDivide(TDivide node);
    void caseTMultiply(TMultiply node);
    void caseTGt(TGt node);
    void caseTGteq(TGteq node);
    void caseTEq(TEq node);
    void caseTColon(TColon node);
    void caseTDot(TDot node);
    void caseTOparen(TOparen node);
    void caseTCparen(TCparen node);
    void caseTObrace(TObrace node);
    void caseTCbrace(TCbrace node);
    void caseTSemicolon(TSemicolon node);
    void caseTComma(TComma node);
    void caseTAssignment(TAssignment node);
    void caseTIdentifier(TIdentifier node);
    void caseTUnterminatedString(TUnterminatedString node);
    void caseTIllegalString(TIllegalString node);
    void caseTIllegal(TIllegal node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
